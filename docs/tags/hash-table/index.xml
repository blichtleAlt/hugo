<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hash table on Brendan&#39;s Blog</title>
    <link>https://blichtlealt.github.io/hugo/tags/hash-table/</link>
    <description>Recent content in hash table on Brendan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Nov 2022 19:50:39 -0800</lastBuildDate><atom:link href="https://blichtlealt.github.io/hugo/tags/hash-table/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>981. Time Based Key-Value Store</title>
      <link>https://blichtlealt.github.io/hugo/blog/time-based-key-value-store/</link>
      <pubDate>Tue, 22 Nov 2022 19:50:39 -0800</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/time-based-key-value-store/</guid>
      <description>https://leetcode.com/problems/time-based-key-value-store/
Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key&amp;rsquo;s value at a certain timestamp.
Implement the TimeMap class:
TimeMap() Initializes the object of the data structure. void set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp. String get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev &amp;lt;= timestamp.</description>
    </item>
    
    <item>
      <title>141. Linked List Cycle</title>
      <link>https://blichtlealt.github.io/hugo/blog/linked-list-cycle/</link>
      <pubDate>Sun, 20 Nov 2022 16:26:56 -0800</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/linked-list-cycle/</guid>
      <description>https://leetcode.com/problems/linked-list-cycle/
Given head, the head of a linked list, determine if the linked list has a cycle in it.
There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail&amp;rsquo;s next pointer is connected to. Note that pos is not passed as a parameter.</description>
    </item>
    
    <item>
      <title>242. Valid Anagram</title>
      <link>https://blichtlealt.github.io/hugo/blog/valid-anagram/</link>
      <pubDate>Sun, 20 Nov 2022 15:53:28 -0800</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/valid-anagram/</guid>
      <description>https://leetcode.com/problems/valid-anagram/
Given two strings s and t, return true if t is an anagram of s, and false otherwise.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Example 1: Input: s = &amp;#34;anagram&amp;#34;, t = &amp;#34;nagaram&amp;#34; Output: true Example 2: Input: s = &amp;#34;rat&amp;#34;, t = &amp;#34;car&amp;#34; Output: false Constraints: 1 &amp;lt;= s.</description>
    </item>
    
    <item>
      <title>1. Two Sum</title>
      <link>https://blichtlealt.github.io/hugo/blog/two-sum/</link>
      <pubDate>Sun, 20 Nov 2022 10:33:33 -0800</pubDate>
      
      <guid>https://blichtlealt.github.io/hugo/blog/two-sum/</guid>
      <description>https://leetcode.com/problems/two-sum/
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Idea: Here we construct a lookup map where the key is the number and the value is the index.</description>
    </item>
    
  </channel>
</rss>
